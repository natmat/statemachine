# /Users/Nathan/work/petards/git/asdo/Libraries/TmcStadler/TopLevelDcoSm.cpp

digraph G {
	rankdir=LR;
	node [shape = doublecircle]; Initial;
	node [shape = circle, style=filled, fontcolor=blue fontsize=12];
     

	WaitForConfigValid -> LoadConfigDetails [color=turquoise, fontcolor=turquoise, label="DcoEvent::OnConfigValidMessage \[\]<>"]; 
	LoadConfigDetails -> CheckNonInteractiveMode [color=brown, fontcolor=brown, label="DcoEvent::NoTrigger \[\]<>"]; 
	CheckNonInteractiveMode -> FailedMonitor [color=pink, fontcolor=pink, label="DcoEvent::NoTrigger \[failMonitorRequest()\]<>"]; 
	CheckNonInteractiveMode -> LoadNvmDetails [color=blue, fontcolor=blue, label="DcoEvent::NoTrigger \[!_state.nvmUsed() && !failMonitorRequest()\]<>"]; 
	CheckNonInteractiveMode -> BlankScreen [color=green, fontcolor=green, label="DcoEvent::NoTrigger \[_state.nvmUsed() && !failMonitorRequest()\]<>"]; 
	Dco -> LoadConfigDetails [color=green, fontcolor=green, label="DcoEvent::OnConfigValidMessage \[\]<>"]; 
	LoadNvmDetails -> BlankScreen [color=turquoise, fontcolor=turquoise, label="DcoEvent::NoTrigger \[\]< _state.nvmUsed(true); >"];
	BlankScreen -> Dco [color=black, fontcolor=black, label="DcoEvent::NoTrigger \[!_state.monitorFailureMode()\]<>"]; 
	BlankScreen -> MonitorFailureDco [color=blue, fontcolor=blue, label="DcoEvent::NoTrigger \[_state.monitorFailureMode()\]<>"]; 
	Dco -> FailedMonitor [color=pink, fontcolor=pink, label="DcoEvent::OnFailMonitorMessage \[\]< _state.blankScreen(false);>"];
	Dco -> Dco [color=orange, fontcolor=orange, label="DcoEvent::GuiButtonOtcmClicked \[\]<>"]; 
	Dco -> Dco [color=green, fontcolor=green, label="DcoEvent::GuiButtonAsdoClicked \[\]<>"]; 
	Dco -> Dco [color=black, fontcolor=black, label="DcoEvent::GuiButtonSettingsClicked \[\]<>"]; 
	Dco -> Dco [color=pink, fontcolor=pink, label="DcoEvent::ShowOtcmOnDoorClosed \[\]<>"]; 
	Dco -> Dco [color=black, fontcolor=black, label="DcoEvent::ShowOtcmOnDoorReleased \[\]<>"]; 
	Dco -> Dco [color=green, fontcolor=green, label="DcoEvent::OnLowSpeedMessage \[_state.icmType() == IcmType::Asdo\]<>"]; 
	Dco -> Dco [color=orange, fontcolor=orange, label="DcoEvent::OnLowSpeedMessage \[_state.icmType() == IcmType::Otcm && _state.monitorFailureMode()\]<>"]; 
	Dco -> Dco [color=green, fontcolor=green, label="DcoEvent::OnAsdoOverrideMessage \[_state.tmcAsdoOverride()\]< updateGuiWithAsdoOverrideActive(); >"];
	Dco -> Dco [color=red, fontcolor=red, label="DcoEvent::OnLopOverriddenMessage \[\]< updateGuiWithLopOverride(); >"];
	Dco -> Dco [color=black, fontcolor=black, label="DcoEvent::OnTmcLopMessage \[_state.doorMapMessage() != nullptr\]< sendLockOutPattern(); >"];
	Dco -> Dco [color=pink, fontcolor=pink, label="DcoEvent::OnTmcPlatformSelectedMessage \[\]< _state.makeSureSelectedStationMatchesLocationMessage(); >"];
	Dco -> Dco [color=red, fontcolor=red, label="DcoEvent::OnTmcStationSelectedMessage \[\]< _state.makeSureSelectedStationMatchesLocationMessage(); >"];
	Dco -> Dco [color=turquoise, fontcolor=turquoise, label="DcoEvent::OnEvacuationMessage \[_state.tmcEvacuation()\]< updateGuiWithEvacuationActive(); >"];
	Dco -> Dco [color=turquoise, fontcolor=turquoise, label="DcoEvent::OnEvacuationMessage \[externalTransitionOnEvacExit()\]< updateGuiWithEvacuationInactive(); >"];
	Dco -> Dco [color=orange, fontcolor=orange, label="DcoEvent::OnEvacuationMessage \[!_state.tmcEvacuation() && !needCsdeWarning()\]< updateGuiWithEvacuationInactive(); >"];
	Dco -> Dco [color=red, fontcolor=red, label="DcoEvent::OnDistanceAlarmMessage \[\]<>"];
  Dco -> Dco [color=orange, fontcolor=orange, label="DcoEvent::OnDcoFaultMessage \[\]< handleDcoFaultMessage(); >"];
	Dco -> Dco [color=darkorchid1, fontcolor=darkorchid1, label="DcoEvent::OnDcoFaultRefresh \[\]< updateGuiWithDcoFault(); >"];
	Dco -> Dco [color=brown, fontcolor=brown, label="DcoEvent::OnCarDcoFaultMessage \[\]< handleCarDcoFaultMessage(); >"];
	Dco -> Dco [color=pink, fontcolor=pink, label="DcoEvent::OnDeviceTemperatureMessage \[\]< handleDeviceTemperatureMessage(); >"];
	Dco -> Dco [color=brown, fontcolor=brown, label="DcoEvent::OnTcmsAlarmMessage \[_state.icmType() == IcmType::Otcm\]<>"]; 
	Dco -> Dco [color=green, fontcolor=green, label="DcoEvent::OnTcmsAlarmCancelMessage \[\]< clearTcmsAlarm(); >"];
	Dco -> Dco [color=darkorchid1, fontcolor=darkorchid1, label="DcoEvent::DualScreenOtcmEnable \[\]<>"]; 
	Dco -> Dco [color=blue, fontcolor=blue, label="DcoEvent::DualScreenCctvEnableAlarm \[\]<>"]; 
	Dco -> Dco [color=red, fontcolor=red, label="DcoEvent::OnFirmwareVersionMismatchMessage \[\]< updateGuiWithDcoFault(); >"];
	Dco -> MonitorFailureDco [color=orange, fontcolor=orange, label="DcoEvent::MonitorFailureModeEnable \[\]<>"]; 
	Dco -> MonitorFailureDco [color=turquoise, fontcolor=turquoise, label="DcoEvent::NoTrigger \[_state.otcmSingleMonitorModeEnabled()\]<handleSingleMonitorModeRequest();>"];
	Dco -> Dco [color=black, fontcolor=black, label="DcoEvent::GuiButtonDarkScreenClicked \[isDarkScreenDisplayed()\]< stopOtcmIfModeWasForced();  _state.blankScreen(true); >"];
	Dco -> Dco [color=orange, fontcolor=orange, label="DcoEvent::GuiButtonDarkScreenClicked \[isAlarmImagesDisplayed()\]<>"]; 
	Dco -> Dco [color=red, fontcolor=red, label="DcoEvent::OnDoorReleaseMessage \[_state.icmType() == IcmType::Otcm\]< updateGuiWithDoorRelease(); doorReleaseForOtcm(); auditIfNotViewingDooCamerasOnDoorClose(); >"];
	Dco -> Dco [color=orange, fontcolor=orange, label="DcoEvent::OnDoorReleaseMessage \[_state.icmType() == IcmType::Asdo\]< updateGuiWithDoorRelease(); auditIfNotViewingDooCamerasOnDoorClose(); >"];
	Dco -> Dco [color=green, fontcolor=green, label="DcoEvent::GuiScreenTouched \[!amIActiveCab() && _state.icmType() == IcmType::Otcm && anyDoorsHavePreviouslyBeenReleased()\]<_state.unblankScreen(true); _state.touchScreenTimeout().reset(); >"];
	Dco -> Dco [color=orange, fontcolor=orange, label="DcoEvent::GuiScreenTouched \[!amIActiveCab()\]< checkInactiveCabOtcmTimers( true ); >"];
	Dco -> Dco [color=turquoise, fontcolor=turquoise, label="DcoEvent::GuiScreenTouched \[_state.icmType() == IcmType::Otcm && !anyDoorsHavePreviouslyBeenReleased()\]< screenTouched(); >"];
	Dco -> Dco [color=pink, fontcolor=pink, label="DcoEvent::GuiScreenTouched \[_state.icmType() == IcmType::Asdo && amIActiveCab( )&& !isWithinGeofence()\]< _state.unblankScreen(true); >"];
	Dco -> Dco [color=green, fontcolor=green, label="DcoEvent::GuiScreenTouched \[amIActiveCab()\]< screenTouched(); >"];
	Dco -> Dco [color=red, fontcolor=red, label="DcoEvent::GuiButtonPisClicked \[\]<>"]; 
	Dco -> Dco [color=turquoise, fontcolor=turquoise, label="DcoEvent::GuiButtonCctvClicked \[\]<>"]; 
	Dco -> Dco [color=turquoise, fontcolor=turquoise, label="DcoEvent::OnVdiuStatusMessage \[\]< updateGuiWithVdiuStatus(); >"];
	Dco -> Dco [color=brown, fontcolor=brown, label="DcoEvent::OnConsistMapMessage \[\]< updateGuiWithConsistMap(); >"];
	Dco -> Dco [color=turquoise, fontcolor=turquoise, label="DcoEvent::OnDoorMapMessage \[\]< updateGuiWithDoorMap();  >"];
	Dco -> Dco [color=blue, fontcolor=blue, label="DcoEvent::OnCameraSectionMapMessage \[\]< updateGuiWithSectionsMap(); >"];
	Dco -> Dco [color=turquoise, fontcolor=turquoise, label="DcoEvent::OnSystemResetRequestMessage \[\]< handleSystemResetRequest(); >"];
	Dco -> Dco [color=red, fontcolor=red, label="DcoEvent::OnLocationMessage \[\]< updateGuiWithLatestLocation(); clearPlatformIfLocationChanged(); >"];
	Dco -> Dco [color=darkorchid1, fontcolor=darkorchid1, label="DcoEvent::OnCabActiveMessage \[\]< updateGuiWithActiveCab(); >"];
	MonitorFailureDco -> MonitorFailureDco [color=brown, fontcolor=brown, label="DcoEvent::OnDcoFaultMessage \[\]< handleDcoFaultMessage(); >"];
	MonitorFailureDco -> MonitorFailureDco [color=brown, fontcolor=brown, label="DcoEvent::OnDcoFaultRefresh \[\]< updateGuiWithDcoFault(); >"];
	MonitorFailureDco -> MonitorFailureDco [color=black, fontcolor=black, label="DcoEvent::OnCarDcoFaultMessage \[\]< handleCarDcoFaultMessage(); >"];
	MonitorFailureDco -> MonitorFailureDco [color=green, fontcolor=green, label="DcoEvent::OnDeviceTemperatureMessage \[\]< handleDeviceTemperatureMessage(); >"];
	MonitorFailureDco -> MonitorFailureDco [color=pink, fontcolor=pink, label="DcoEvent::OnVdiuStatusMessage \[\]< updateGuiWithVdiuStatus(); >"];
	MonitorFailureDco -> MonitorFailureDco [color=green, fontcolor=green, label="DcoEvent::OnConsistMapMessage \[\]< updateGuiWithConsistMap(); >"];
	MonitorFailureDco -> MonitorFailureDco [color=darkorchid1, fontcolor=darkorchid1, label="DcoEvent::OnDoorMapMessage \[\]< updateGuiWithDoorMap();  >"];
	MonitorFailureDco -> MonitorFailureDco [color=turquoise, fontcolor=turquoise, label="DcoEvent::OnCameraSectionMapMessage \[\]< updateGuiWithSectionsMap(); >"];
	MonitorFailureDco -> MonitorFailureDco [color=turquoise, fontcolor=turquoise, label="DcoEvent::OnSystemResetRequestMessage \[\]< handleSystemResetRequest(); >"];
	MonitorFailureDco -> MonitorFailureDco [color=blue, fontcolor=blue, label="DcoEvent::OnLocationMessage \[\]< updateGuiWithLatestLocation(); clearPlatformIfLocationChanged(); >"];
	MonitorFailureDco -> MonitorFailureDco [color=turquoise, fontcolor=turquoise, label="DcoEvent::OnCabActiveMessage \[\]< updateGuiWithActiveCab(); >"];
	MonitorFailureDco -> MonitorFailureDco [color=red, fontcolor=red, label="DcoEvent::OnAsdoOverrideMessage \[_state.tmcAsdoOverride()\]< updateGuiWithAsdoOverrideActive(); >"];
	MonitorFailureDco -> MonitorFailureDco [color=orange, fontcolor=orange, label="DcoEvent::OnLopOverriddenMessage \[\]< updateGuiWithLopOverride(); >"];
	MonitorFailureDco -> MonitorFailureDco [color=black, fontcolor=black, label="DcoEvent::OnTmcLopMessage \[_state.doorMapMessage() != nullptr\]< sendLockOutPattern(); >"];
	MonitorFailureDco -> MonitorFailureDco [color=orange, fontcolor=orange, label="DcoEvent::OnTmcPlatformSelectedMessage \[\]< _state.makeSureSelectedStationMatchesLocationMessage(); >"];
	MonitorFailureDco -> MonitorFailureDco [color=turquoise, fontcolor=turquoise, label="DcoEvent::OnTmcStationSelectedMessage \[\]< _state.makeSureSelectedStationMatchesLocationMessage(); >"];
	MonitorFailureDco -> MonitorFailureDco [color=orange, fontcolor=orange, label="DcoEvent::OnEvacuationMessage \[_state.tmcEvacuation()\]< updateGuiWithEvacuationActive(); >"];
	MonitorFailureDco -> MonitorFailureDco [color=black, fontcolor=black, label="DcoEvent::OnEvacuationMessage \[!_state.tmcEvacuation() && !needCsdeWarning()\]< updateGuiWithEvacuationInactive(); >"];
	MonitorFailureDco -> MonitorFailureDco [color=turquoise, fontcolor=turquoise, label="DcoEvent::OnFirmwareVersionMismatchMessage \[\]< updateGuiWithDcoFault(); >"];
	MonitorFailureDco -> MonitorFailureDco [color=red, fontcolor=red, label="DcoEvent::OnDoorReleaseMessage \[\]< updateGuiWithDoorRelease(); doorReleaseForOtcm(); auditIfNotViewingDooCamerasOnDoorClose(); >"];
	MonitorFailureDco -> LoadConfigDetails [color=brown, fontcolor=brown, label="DcoEvent::OnConfigValidMessage \[\]<>"]; 
	MonitorFailureDco -> MonitorFailureDco [color=darkorchid1, fontcolor=darkorchid1, label="DcoEvent::GuiButtonOtcmClicked \[\]<>"]; 
	MonitorFailureDco -> MonitorFailureDco [color=orange, fontcolor=orange, label="DcoEvent::GuiButtonAsdoClicked \[\]<>"]; 
	MonitorFailureDco -> MonitorFailureDco [color=orange, fontcolor=orange, label="DcoEvent::GuiButtonSettingsClicked \[\]<>"]; 
	MonitorFailureDco -> MonitorFailureDco [color=black, fontcolor=black, label="DcoEvent::GuiButtonPisClicked \[\]<>"]; 
	MonitorFailureDco -> MonitorFailureDco [color=pink, fontcolor=pink, label="DcoEvent::GuiButtonCctvClicked \[\]<>"]; 
	MonitorFailureDco -> MonitorFailureDco [color=darkorchid1, fontcolor=darkorchid1, label="DcoEvent::ShowOtcmOnDoorClosed \[\]<>"]; 
	MonitorFailureDco -> MonitorFailureDco [color=brown, fontcolor=brown, label="DcoEvent::ShowOtcmOnDoorReleased \[\]<>"]; 
	MonitorFailureDco -> MonitorFailureDco [color=green, fontcolor=green, label="DcoEvent::OnLowSpeedMessage \[_state.lowSpeed()\]< _state.unblankScreen(false); }>"];
	MonitorFailureDco -> Dco [color=blue, fontcolor=blue, label="DcoEvent::GuiButtonIcmRebootClickedEvent \[\]< handleIcmRebootButtonClicked(); >"];
	MonitorFailureDco -> MonitorFailureDco [color=brown, fontcolor=brown, label="DcoEvent::OnLowSpeedMessage \[!_state.lowSpeed() && !_state.leftDoorEverReleased() && !_state.rightDoorEverReleased()\]< _state.blankScreen(false); >"];
	MonitorFailureDco -> MonitorFailureDco [color=blue, fontcolor=blue, label="DcoEvent::OnLowSpeedMessage \[!_state.lowSpeed()\]< auditIfNotViewingDooCamerasOnDoorClose(); >"];
	MonitorFailureDco -> MonitorFailureDco [color=brown, fontcolor=brown, label="DcoEvent::OnDistanceAlarmMessage \[\]<>"];
  	MonitorFailureDco -> MonitorFailureDco [color=darkorchid1, fontcolor=darkorchid1, label="DcoEvent::OnTcmsAlarmMessage \[\]<>"]; 
	MonitorFailureDco -> MonitorFailureDco [color=pink, fontcolor=pink, label="DcoEvent::OnTcmsAlarmCancelMessage \[\]< clearTcmsAlarm(); >"];
	MonitorFailureDco -> MonitorFailureDco [color=orange, fontcolor=orange, label="DcoEvent::GuiButtonDarkScreenClicked \[isDarkScreenDisplayed()\]< _state.blankScreen(false); >"];
	MonitorFailureDco -> MonitorFailureDco [color=red, fontcolor=red, label="DcoEvent::GuiButtonDarkScreenClicked \[isAlarmImagesDisplayed()\]<>"]; 
	MonitorFailureDco -> MonitorFailureDco [color=blue, fontcolor=blue, label="DcoEvent::GuiScreenTouched \[!amIActiveCab() && anyDoorsHavePreviouslyBeenReleased()\]<_state.unblankScreen(true); _state.touchScreenTimeout().reset(); >"];
	MonitorFailureDco -> MonitorFailureDco [color=orange, fontcolor=orange, label="DcoEvent::GuiScreenTouched \[!isWithinGeofence() && amIActiveCab()\]< _state.unblankScreen(true); >"];
	MonitorFailureDco -> MonitorFailureDco [color=brown, fontcolor=brown, label="DcoEvent::GuiScreenTouched \[!amIActiveCab()\]< screenTouched(); >"];
	MonitorFailureDco -> MonitorFailureDco [color=orange, fontcolor=orange, label="DcoEvent::GuiScreenTouched \[amIActiveCab()\]< screenTouched(); >"];
}
